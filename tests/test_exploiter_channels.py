import types
import asyncio
from sqli_hunter.exploiter import Exploiter


def test_low_and_slow_channels():
    exploiter = Exploiter(types.SimpleNamespace())
    vuln = {
        'url': 'http://example.com',
        'method': 'GET',
        'parameter': 'id',
        'simulated_responses': {
            'doh': ['x'],
            'h2': ['a', 'b'],
            'quic': ['y'],
            'ws': ['c', 'd'],
        }
    }

    async def run():
        res_doh = await exploiter.extract_data_doh(None, vuln, 'k0')
        res_h2 = await exploiter.extract_data_h2(None, vuln, 'k1')
        res_quic = await exploiter.extract_data_quic(None, vuln, 'k2')
        res_ws = await exploiter.extract_data_ws(None, vuln, 'k3')
        assert res_doh['data'] == 'x'
        assert res_h2['data'] == 'ab'
        assert res_quic['data'] == 'y'
        assert res_ws['data'] == 'cd'
        auto = await exploiter.auto_extract(None, vuln, 'k4')
        assert auto['data'] in ('x', 'ab', 'y', 'cd')

    asyncio.run(run())
