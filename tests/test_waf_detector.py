import types
import os
import sys

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from sqli_hunter.waf_detector import WafDetector


class DummyResponse:
    def __init__(self, headers=None, text=""):
        self.headers = headers or {}
        self.text = text


class DummyCookie:
    def __init__(self, name):
        self.name = name


def detector():
    return WafDetector(None, None)


def test_f5_asm_detection():
    response = DummyResponse(
        headers={"Server": "BigIP"},
        text="The requested URL was rejected. Please consult with your administrator."
    )
    cookies = [DummyCookie("TS01234567")]
    assert detector()._check_signatures_headless(response, cookies) == "F5 ASM"


def test_barracuda_detection():
    response = DummyResponse(
        text="Barracuda.Networks"
    )
    cookies = [DummyCookie("BNI__BARRACUDA_LB_COOKIE")]
    assert detector()._check_signatures_headless(response, cookies) == "Barracuda"


def test_modsecurity_detection():
    response = DummyResponse(
        headers={"Server": "Mod_Security"},
        text="This error was generated by ModSecurity"
    )
    cookies = []
    assert detector()._check_signatures_headless(response, cookies) == "ModSecurity"


def test_single_match_not_enough():
    response = DummyResponse(
        headers={"Server": "BigIP"},
        text="The requested URL was rejected"
    )
    cookies = []
    assert detector()._check_signatures_headless(response, cookies) is None
